import random

import os
#os.remove("data.csv")
#os.remove("data.txt")
#os.remove("data2.csv")


filecontent='''15 95 91 8 100
21 91 83 87 40
82 83 56 84 75
67 82 18 0 83
95 8 25 41 73
'''
with open("input.txt","w") as f : f.write(filecontent)


filecontent='''HARTSFIELD INTL,ATLANTA
BALTO/WASH INTL,BALTIMORE
LOGAN INTL,BOSTON
DOUGLAS MUNI,CHARLOTTE
MIDWAY,CHICAGO
O'HARE INTL,CHICAGO
DALLAS/FT WORTH INTL,DALLAS
LOVE FIELD,DALLAS
STAPLETON INTL,DENVER
DETROIT CITY,DETROIT
WAYNE COUNTY,DETROIT
WILLOW RUN,DETROIT
HONOLULU INTL,HONOLULU
INTERCONTINENTAL,HOUSTON
HOBBY,HOUSTON
ELLINGTON FIELD,HOUSTON
MC CARRAN INTL,LAS VEGAS
HOLLYWOOD-BURBANK,LOS ANGELES
LONG BEACH,LOS ANGELES
LOS ANGELES INTL,LOS ANGELES
ORANGE COUNTY,LOS ANGELES
MIAMI INTL,MIAMI
FT LAUDERDALE INTL,MIAMI
MINNEAPOLIS/ST PAUL,MINNEAPOLIS
NEWARK,NEWARK
JOHN F KENNEDY INTL, NEW YORK
LA GUARDIA,NEW YORK
ORLANDO INTL,ORLANDO
INTERNATIONAL,PHILADELPHIA
SKY HARBOR INTL,PHOENIX
GREATER PITTSBURGH,PITTSBURGH
LAMBERT-ST LOUIS,ST LOUIS
SALT LAKE CITY INTL,SALT LAKE CITY
SAN DIEGO INTL,SAN DIEGO
BUCHANAN FIELD,SAN FRANCISCO
OAKLAND METRO INTL,SAN FRANCISCO
SAN FRANCISCO INTL,SAN FRANCISCO
SEATTLE-TACOMA INTL,SEATTLE
TAMPA INTL,TAMPA
DULLES INTL,WASHINGTON
WASHINGTON NATIONAL,WASHINGTON
ALBUQUERQUE INTL,ALBUQUERQUE
ANCHORAGE INTL,ANCHORAGE
MUELLER MUNI,AUSTIN
GREATER BUFFALO INTL,BUFFALO
GREATER CINCINNATI,CINCINNATI
HOPKINS INTL,CLEVELAND
PORT COLUMBUS INTL,COLUMBUS
LOCKBURN AFB,COLUMBUS
COX/DAYTON INTL,DAYTON
EL PASO INTL,EL PASO
SOUTHWEST,FORT MYERS
BRADLEY INTL,HARTFORD
INDIANAPOLIS INTL,INDIANAPOLIS
JACKSONVILLE INTL,JACKSONVILLE
KAHULUI,MAUI
INTERNATIONAL,KANSAS CITY
LIHUE,KAUAI
MEMPHIS INTL,MEMPHIS
GENERAL MITCHELL,MILWAUKEE
METROPOLITAN,NASHVILLE
INTL/MOISANT FIELD,NEW ORLEANS
NORFOLK REGIONAL,NORFOLK
WILL ROGERS WORLD,OKLAHOMA CITY
ONTARIO INTL,ONTARIO
PORTLAND INTL,PORTLAND
RALEIGH-DURHAM,RALEIGH
RENO INTL,RENO
ROCHESTER-MONROE CTY,ROCHESTER
SACRAMENTO METRO,SACRAMENTO
SAN ANTONIO INTL,SAN ANTONIO
SAN JOSE MUNI,SAN JOSE
HANCOCK,SYRACUSE
TUCSON INTL,TUCSON
TULSA INTL,TULSA
PALM BEACH INTL,WEST PALM BEACH
AKRON-CANTON,AKRON
ALBANY COUNTY,ALBANY
ALLENTOWN-BETHEHEM,ALLENTOWN
AMARILLO,AMARILLO
RYAN,BATON ROUGE
LOGAN FIELD,BILLINGS
BIRMINGHAM MUNI,BIRMINGHAM
BOISE AIR TERMINAL,BOISE
HARLINGEN INDUSTRIAL,BROWNSVILLE
BURLINGTON INTL,BURLINGTON
CEDAR RAPIDS MUNI,CEDAR RAPIDS
CHARLESTON AFB/MUNI,CHARLESTON
LOVELL FIELD,CHATTANOOGA
PETERSON FIELD,COLORADO SPRINGS
COLUMBIA METRO,COLUMBIA
CORPUS CHRISTI INTL,CORPUS CHRISTI
DAYTONA BEACH REG,DAYTONA BEACH
DES MOINES MUNI,DES MOINES
MAHLON SWEET FIELD,EUGENE
FAIRBANKS INTL,FAIRBANKS
MUNI/BAER FIELD,FORT WAYNE
FRESNO AIR TERMINAL,FRESNO
KENT COUNTY,GRAND RAPIDS
GREENSBORO-HP-WS REG,GREENSBORO
GREENVILLE/SPARTANBG,GREENVILLE
HARRISBURG INTL,HARRISBURG
GENERAL LYMAN FIELD,HILO
MADISON COUNTY,HUNTSVILLE
PALM SPRINGS MUNI,INDIO
LONG ISLAND-MCARTHUR,ISLIP
THOMPSON FIELD,JACKSON
KE-AHOLE,KAILUA-KONA
MCGHEE TYSON,KNOXVILLE
BLUE GRASS,LEXINGTON
ADAMS FIELD,LITTLE ROCK
STANDIFORD FIELD,LOUISVILLE
LUBBOCK REGIONAL,LUBBOCK
TRUAX FIELD,MADISON
MUNICIPAL,MANCHESTER
CAPE KENNEDY REG,MELBOURNE
MIDLAND REGIONAL,MIDLAND
BATES FIELD,MOBILE
QUAD CITY,MOLINE
EPPLEY AIRFIELD,OMAHA
PENSACOLA REGIONAL,PENSACOLA
PORTLAND INTL JETPRT,PORTLAND
FRANCIS GREEN STATE,PROVIDENCE
BYRD FLYING FIELD,RICHMOND
ROANOKE MUNI,ROANOKE
TRI CITY,SAGINAW
SANTA BARBARA,SANTA BARBARA
SARASOTA-BRADENTON,SARASOTA
SAVANNAH INTL,SAVANNAH
SHREVEPORT REGIONAL,SHREVEPORT
FOSS FIELD,SIOUX FALLS
MICHIANA REGIONAL,SOUTH BEND
SPOKANE INTL,SPOKANE
TALLAHASSEE REGIONAL,TALLAHASSEE
MID-CONTINENT,WICHITA
'''
with open("data.txt","w") as f : f.write(filecontent)
    

def get_gpa(student_id, semester_no):
    student_ids = [4567890, 5678901, 6789012, 7890123, 8901234, 9012345, 2171544, 2315477, 2424937]
    grades = fill_gpa(student_id)
    random.seed(student_id + semester_no)
    rand = random.random()
    if student_id not in student_ids: # ID's which does not exist in the database
        raise KeyError
    elif rand > 0.25:
        return grades[semester_no-1]
    elif rand < 0.125:
        raise ValueError
    else:
        raise IndexError

def fill_gpa(student_id):
    random.seed(student_id)
    gpas = []
    for sem in range(8):
        gpas.append(round((random.random() + 1) * 2, 2)) # gpa's are in [2.0, 4.0]
    return gpas

data_csv = '''Date,BTCUSD,USDTRY
0,-47738.0,13.32
1,47311.8,13.41
2,-46430.2,13.3
3,45837.3,13.58
4,43425.9,14.03
5,-43097.5,13.95
6,-41546.7,14.18
7,-41672.0,14.25
8,41848.3,14.15
9,41832.2,14.05
10,42733.2,13.87
11,43901.0,13.39
12,42560.0,13.77
13,43073.3,13.65
14,43097.0,13.57
15,43079.1,13.55
16,-42209.3,13.61
17,42364.6,13.68
18,41677.8,13.64
19,40715.9,13.58
20,36475.5,13.77
21,35075.2,13.8
22,36269.5,13.8
23,36686.3,13.7
24,-36950.6,13.67
25,-36800.4,13.79
26,-37164.3,13.81
27,37745.1,13.66
28,38170.8,13.59
29,37917.7,13.65
30,-38498.6,13.37
31,38709.7,13.45
32,36890.2,13.65
33,37287.8,13.62
34,-41567.6,13.48
35,41412.1,13.44
36,42392.2,13.36
37,43833.9,13.54
38,44038.2,13.6
39,44388.9,13.57
40,43521.0,13.65
41,42388.4,13.63
42,42205.2,13.67
43,42061.1,13.66
44,42550.3,13.65
45,44544.4,13.57
46,43883.6,13.59
47,-40552.8,13.67
48,40000.1,13.77
49,40090.3,13.8
50,38355.0,13.82
51,37017.7,13.88
52,38248.2,13.89
53,-37224.6,13.94
54,38339.2,14.11
55,-39209.6,13.84
56,-39115.5,13.94
57,37689.1,14.22
58,-43188.2,13.72
59,-44420.3,13.91
60,43912.8,14.07
61,42463.0,14.21
62,39142.7,14.36
63,39395.8,14.37
64,38403.1,14.49
65,-38024.8,14.54
66,38744.8,14.61
67,41929.0,14.64
68,-39416.3,14.96
69,38730.2,14.91
70,38814.3,14.92
71,37792.4,14.97
72,39671.1,14.9
73,39285.7,14.77
74,-41118.7,14.59
75,-40914.8,14.72
76,41767.8,14.72
77,42233.0,14.68
78,41276.0,14.78
79,41022.0,14.87
80,42373.0,14.84
81,-42912.0,14.8
82,44013.0,14.8
83,44331.0,14.91
84,44548.0,14.9
85,-46859.0,14.8
86,47105.0,14.85
87,47449.0,14.68
88,-47075.0,14.68
89,45525.0,14.79
90,46297.0,14.76
91,45811.0,14.78
92,46407.0,14.7
93,46629.0,14.75
94,45506.0,14.81
95,43173.0,14.87
96,43448.0,14.85
97,-42275.0,14.89
98,42767.0,14.86
99,-42138.0,14.89
100,39497.0,14.82
101,40078.0,14.69
102,41133.0,14.68
103,39936.0,14.74
104,40560.0,14.74
105,40382.0,14.74
106,-39703.0,14.77
107,40803.0,14.72
108,-41503.0,14.68
109,41368.0,14.74
110,-40482.0,14.8
111,39709.0,14.84
112,-39418.0,14.84
113,39464.0,14.83
114,-40427.0,14.82
115,-38113.0,14.9
116,39243.0,14.88
117,-39748.0,14.86
118,38581.0,15.04
119,37650.0,15.24
120,-38461.0,15.23
121,38514.0,15.19
122,37718.0,15.12
123,39688.0,14.83
124,-36544.0,15.09
125,36009.0,15.17
126,-35468.0,15.23
127,34060.0,15.25
128,-30095.0,15.57
129,31007.5,15.71
130,29068.2,15.93
131,28976.0,15.89
132,29284.4,15.93
133,30080.4,15.95
134,31308.7,15.82
135,-29849.0,15.87
136,30437.5,15.93
137,28683.7,16.31
138,-30305.9,16.1
139,29178.6,16.15
140,29434.6,16.1
141,-30286.6,16.01
142,-29093.3,16.16
143,29648.7,16.21
144,29540.6,16.42
145,-29203.5,16.54
146,28601.2,16.46
147,29027.1,16.36
148,29465.2,16.4
149,31723.3,16.34
150,31793.4,16.44
'''

with open("data.csv","w") as f : f.write(data_csv)
with open("movie.csv","w") as f : f.write(data_csv)



def flight_time(flight_id):
    flights = {'PC7079': '10:00', 'TK5767': '10:30', 'PC3024': '11:30', 'TK1202': '11:45', 'TK5936': '12:15', 'TK4793': '13:20', 'TK5610': '14:00', 'TK2988': '14:15', 'PC2410': '14:32', 'TK9571': '14:50', 'TK5759': '15:00', 'PC6360': '12:00', 'PC5834': '13:00', 'TK7161': '16:30', 'TK9699': '17:10', 'TK6221': '20:00', 'TK5836': '19:00', 'PC1603': '18:00', 'PC8987': '19:10', 'TK9880': '11:11', 'TK5644': '13:26', 'PC3272': '20:20', 'PC1662': '10:10', 'PC6640': '11:30', 'PC6323': '12:00', 'PC3690': '12:35', 'TK4399': '13:00', 'TK4147': '14:00', 'TK4373': '15:00', 'PC1030': '16:10', 'PC7288': '17:30', 'PC9163': '18:18', 'PC1465': '19:25', 'PC1076': '20:00', 'PC4685': '22:00', 'TK4354': '22:30', 'PC2605': '23:05', 'TK1988': '23:30', 'PC3475': '09:00', 'TK3016': '09:20', 'PC1097': '10:00', 'PC4720': '10:30', 'TK9736': '10:14', 'TK5844': '11:00', 'TK4665': '12:00', 'PC2272': '12:15', 'PC2641': '13:00', 'TK7746': '14:00', 'TK8316': '17:00', 'PC2344': '17:18', 'PC2349': '17:51', 'PC7984': '18:30', 'TK3738': '19:00', 'PC9135': '20:00', 'PC5474': '20:30', 'TK3852': '21:21', 'TK5299': '22:15', 'PC3178': '08:00', 'TK4406': '07:00', 'PC5702': '06:13', 'TK5686': '09:09', 'PC9783': '10:16', 'PC1984': '13:01', 'TK3359': '14:17', 'PC7795': '13:12', 'TK3561': '14:29', 'PC2421': '15:00', 'PC1670': '17:00', 'TK9415': '13:00', 'PC6433': '14:02', 'PC8684': '20:00', 'PC9461': '21:19', 'PC5297': '16:13', 'PC4163': '13:16', 'PC4931': '18:19', 'TK5055': '23:45', 'TK8274': '19:20', 'TK5451': '00:00'}
    return flights[flight_id]

sample_20201_txt = '''
PC7079,Amasya,Giresun
TK5767,Samsun,Denizli
PC3024,Giresun,Erzincan
PC6323,Antalya,Ankara
TK4399,Antalya,Ankara
PC3690,Antalya,Ankara
TK3852,Ankara,Antalya
TK5299,Ankara,Antalya
PC5155,Ankara,Antalya
TK3561,Ankara,Malatya
TK9215,Antalya,Samsun
PC2421,Giresun,Erzincan
'''

def custom_sort(lst):
    return sorted(lst, key=lambda x:x[1], reverse=True)

with open("sample_20201.txt","w") as f : f.write(sample_20201_txt)

sample_txt = '''113596,CHE,20.25,65.75,10
131832,METE,50.25,80.25,15.75
126310,CENG,35,0.25,45.25
112020,CENG,90.25,75,55.25
170088,CHE,5,40.75,70
137843,CENG,35,5.25,0.75
153543,CHE,100,70.25,65.25
131745,CENG,10.25,15,35.25
195579,CENG,65.5,15.75,75.75
132426,CHE,35,10.25,35.75
'''

with open("sample.txt","w") as f : f.write(sample_txt)

    
